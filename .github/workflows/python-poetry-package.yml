name: Build Python package

on:
  push:
    branches: ["main", "dev"]

jobs:
  build:
    name: Check and build package
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.11"]

    steps:
    - uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@3542bca2639a428e1796aaa6a2ffef0c0f575566
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install and configure Poetry
      uses: snok/install-poetry@93ada01c735cc8a383ce0ce2ae205a21c415379b
    - name: Install dependencies
      run: |
        poetry install
    - name: Analysing code with pylint
      run: |
        poetry run pylint .
    - name: Test with pytest
      run: |
       poetry run pytest
    - name: Build poetry package
      run: |
        poetry build
    - name: Store the distribution packages
      uses: actions/upload-artifact@a8a3f3ad30e3422c9c7b888a15615d19a852ae32
      with:
        name: python-package-distributions
        path: dist/


  publish-to-testpypi:
    name: Publish Python package to TestPyPI
    needs:
    - build
    runs-on: ubuntu-latest

    environment:
      name: testpypi
      url: https://test.pypi.org/p/imagecolor

    permissions:
      id-token: write  # IMPORTANT: mandatory for trusted publishing

    steps:
    - name: Download all the dists
      uses: actions/download-artifact@9bc31d5ccc31df68ecc42ccf4149144866c47d8a
      with:
        name: python-package-distributions
        path: dist/
    - name: Publish distribution ðŸ“¦ to TestPyPI
      uses: pypa/gh-action-pypi-publish@b7f401de30cb6434a1e19f805ff006643653240e
      with:
        repository-url: https://test.pypi.org/legacy/